{"version":3,"sources":["NavBar.js","pages/HopmePage.js","pages/AboutPage.js","components/ArticleList.js","pages/article-content.js","pages/ArticlesListPage.js","components/Likes.js","components/Comments.js","components/AddCommentForm.js","pages/PageNotFound.js","pages/ArticleSingle.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","HomePage","AboutPage","ArticleList","articles","map","article","idx","key","name","title","content","substring","ArticlesListPage","articleContent","Likes","articleName","upvotes","setArticleVotes","likeArticle","a","fetch","method","res","json","body","onClick","Comment","txt","comment","text","username","AddCommentForm","useState","setUsername","commentTxt","setCommentTxt","addCommentTxt","headers","JSON","stringify","type","value","onChange","evt","target","row","cols","NotFoundPage","ArticleSingle","match","params","find","ar","comments","articleVotes","useEffect","result","fetchData","suggestedArticles","filter","paragraph","App","id","path","component","exact","PageNotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f6af749.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav className=\"navbar\">\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles\">Articles</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React from 'react';\n\nconst HomePage =()=> (\n    <>\n        <h1><span>Welcome to Juti webpage</span></h1>\n        <div> Thank you for visiting Juti Webpage ! </div>\n\n        <h2><span> Here is something about me</span></h2>\n        <div>\n            <p>I am a front-end software engineer with 6 years of experience \n                working with Ad Operation team and stakholders to create, implement, and troubleshoot \n                rich media online ads for clients. <br/>\n                I am interested in this position because of the opportunity to grow my career through \n                working with cross-functional team, learning the industry and solving clients' problems \n                at a global scale. \n            </p>\n        </div>\n        <div>\n            <h2><span> Why do you want to work here?</span></h2>\n            <p> As you can see that I have the experience in the digital advertising as a technical front-end\n                s/w engineer, and where I am at my career is to grow and work with a company like Amazon which \n                has strong technology platforms, encourages everyone to be creative and embrace the challenges of\n                solving complex issues. <br/>\n                This role to me is first, I will be working directly with the clients. Second, I will be\n                working in a team strategically in order to utilise the products like amazon ad feed and \n                build strong products.<br/>\n               I believe I have the skills and the experience to do the job. \n            </p>\n        </div>\n        <div>\n            <h2><span> What is your acheivement?</span></h2>\n            <p> One of the big car companies in CA asked us to create a customization \n                online ad that used the map API. The challenge was the key use case for\n                using mapp API to render the sponsored location by zipcode was not supported\n                by our ad template solution. It would require an enhancement to the existing \n                template functionality.<br/>\n                Given the important of the revenue for the CA's market, I went to do a deep\n                research on how the map api worked within this ad template. I found a way\n                to implement the solution and immediately create a demo and have a QA team  \n                ran a test. <br/>\n                The campaign went live with the solution I implemented and the client add more budget \n                to spend on this running campaign by 30%. \n            </p>\n        </div>\n   \n   \n    </>\n    \n\n)\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage =()=> (\n    <>\n        <h1><span>Welcome to About Me</span></h1>\n        <h2> Here is something about me</h2>\n        <div>\n            <p>I am a front-end software engineer with 6 years of experience \n                working with Ad Operation team and stakholders to create, implement, and troubleshoot \n                rich media online ads for clients. <br/>\n                I am interested in this position because of the opportunity to grow my career through \n                working with cross-functional team, learning the industry and solving clients' problems \n                at a global scale. \n            </p>\n        </div>\n        <div>\n            <h2> Why do you want to work here?</h2>\n            <p> As you can see that I have the experience in the digital advertising as a technical front-end\n                s/w engineer, and where I am at my career is to grow and work with a company like Amazon which \n                has strong technology platforms, encourages everyone to be creative and embrace the challenges of\n                solving complex issues. <br/>\n                This role to me is first, I will be working directly with the clients. Second, I will be\n                working in a team strategically in order to utilise the products like amazon ad feed and \n                build strong products.<br/>\n               I believe I have the skills and the experience to do the job. \n            </p>\n        </div>\n        <div>\n            <h2> What is your acheivement?</h2>\n            <p> One of the big car companies in CA asked us to create a customization \n                online ad that used the map API. The challenge was the key use case for\n                using mapp API to render the sponsored location by zipcode was not supported\n                by our ad template solution. It would require an enhancement to the existing \n                template functionality.<br/>\n                Given the important of the revenue for the CA's market, I went to do a deep\n                research on how the map api worked within this ad template. I found a way\n                to implement the solution and immediately create a demo and have a QA team  \n                ran a test. <br/>\n                The campaign went live with the solution I implemented and the client add more budget \n                to spend on this running campaign by 30%. \n            </p>\n        </div>\n   \n   \n    </>\n    \n\n)\n\nexport default AboutPage;","import React from 'react'; \nimport { Link } from 'react-router-dom';\n\nconst ArticleList = ({articles}) => (\n    <>\n        {articles.map( (article,idx) => (\n            <div key={idx}>\n                <Link to={`/article/${article.name}`}>\n                <h3 >{article.title}</h3>\n                </Link>\n                <p> {article.content[0].substring(0, 150)} ... \n                    <Link  to={`/article/${article.name}`}>\n                        <span>Read More</span>\n                    </Link>\n                </p>\n                <hr/>\n            </div>\n        ))}\n    </>\n)\n\nexport default ArticleList;","const articles = [\n    {\n        name: 'react',\n        title: 'React',\n        content: [\n            `Welcome to React project. When building the React project, there are some tools you need.`, \n            `- node.js \n            - npm.js\n            - ide tool (where you want to write your code\n            - git (this will help you keep track of your code)`,\n            \n            `Next, way to write your react project \n            1. Using create-react-app \n            2. Incorporate babel, webpack to set up your project \n            \n            Project takes about 3-4 weeks (8h/week))`\n        ]\n    },\n    {\n        name: 'ar-vr',\n        title: 'AR/VR',\n        content: [\n            `Welcome to AR/VR project. \n            We are learning how to integrate AR/VR into our project.`, \n\n            `Next way to write your react project \n            1. Using Play-canvas\n            2. Export our project  `,\n            \n            `Lesson takes 3-4 weeks (8hr/week)`\n        ]\n    },\n    {\n        name: 'map-api',\n        title: 'Map API',\n        content: [\n            `Welcome to Map project. \n            We are learning how to integrate opensource Map API into our project.` ,\n            \n            `Next, way to write your react project \n            1. Using Map API\n            2. Using React with Map API  `,\n            \n            `Lesson takes 1 weeks (8 Hours)`\n        ]\n    }\n];\n\nexport default articles;","import React from 'react';\n\nimport ArticleList from '../components/ArticleList'; \nimport articleContent from './article-content';\n\nconst ArticlesListPage =()=> (\n    <>\n        <h1>Welcome to the Article list page</h1>\n        <div className=\"main-articles\">\n           <ArticleList articles={articleContent} />\n        </div>\n   \n    </>\n)\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst Likes = ({articleName, upvotes, setArticleVotes}) => {\n    const likeArticle = async ()=>{\n        const res = await fetch(`/api/articles/${articleName}/upvote`, {\n           method: 'POST', \n        });\n        const body = await res.json();\n        setArticleVotes(body);\n    }\n    return (        \n        <div className=\"Link\">\n        <button onClick={()=> likeArticle()}> Like This </button>\n        <h2>This article has { upvotes } likes</h2>\n        </div>\n    )\n}\n\n\nexport default Likes;","import React from 'react';\n\nconst Comment = ({txt}) => (\n    <>\n    <h2>Comments : </h2>\n    {txt.map((comment, idx)=> (\n        <div className=\"comment\" key={idx}>\n            \n            <p>{comment.text} <span> :by {comment.username}</span></p>\n        </div>\n    ))}\n    </>\n);\n\nexport default Comment;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({articleName, setArticleVotes}) => {\n    const [username, setUsername] = useState('');\n    const [commentTxt, setCommentTxt] = useState('');\n\n    const addCommentTxt = async() => {\n        const res = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({username, text: commentTxt})\n        });\n\n        //get result\n        const body = await res.json();\n        setArticleVotes(body);\n        setUsername('');\n        setCommentTxt ('');\n    }\n\n    return (\n        <div className=\"comment-form\">\n            <label> Name: \n            <input type=\"text\"\n                value={username}\n                onChange={ (evt) => setUsername(evt.target.value)}\n            />\n            </label>\n            \n            <label> Comment: \n                <textarea row=\"65\" cols=\"55\"\n                value={commentTxt}\n                onChange={ (evt) => setCommentTxt(evt.target.value)}\n                />\n            </label>\n           <button onClick={ ()=> addCommentTxt() }> Add Comment </button>\n    \n        </div>\n    );\n\n}\n\n\nexport default AddCommentForm;","import React from 'react'; \n\nconst NotFoundPage = () => (\n    <h1> 404 Page Not Found</h1>\n)\n\nexport default NotFoundPage;","import React, {useState, useEffect} from 'react';\n\nimport ArticleList from '../components/ArticleList';\nimport Likes from '../components/Likes'; \nimport Comment from '../components/Comments'; \nimport AddCommentForm from '../components/AddCommentForm'; \nimport articles from './article-content';\nimport NotFoundPage from './PageNotFound';\n\nconst ArticleSingle =({ match })=> {  // react router pass a prop called 'match' \n\n    const name = match.params.name; \n    const article = articles.find(ar => ar.name === name);\n    \n    //react Hook \n    const [articleVotes, setArticleVotes] = useState({ upvotes: 0, comments:[] });\n\n    useEffect(()=> {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            setArticleVotes(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if(!article) return <NotFoundPage/>\n\n    const suggestedArticles = articles.filter( article => article.name !== name);\n\n    \n\nreturn (\n    <>\n        <h1>Welcome to {articles.title} learning path overview </h1>        \n        <Likes articleName={name} upvotes={articleVotes.upvotes} setArticleVotes={setArticleVotes} />\n        {article.content.map((paragraph, idx ) => (\n            <p key={idx}>{paragraph}</p>\n        ))} \n        <br /> \n        <Comment txt={articleVotes.comments} />\n        <hr/> \n        <AddCommentForm articleName={name} setArticleVotes={setArticleVotes} />\n        <h2>Related Articles : </h2>\n        <ArticleList articles={suggestedArticles} />\n    </>\n    \n\n)}\n\nexport default ArticleSingle;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport './App.css';\nimport NavBar from './NavBar';\nimport HomePage from './pages/HopmePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticleSingle from './pages/ArticleSingle';\nimport PageNotFound from './pages/PageNotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar/>\n        <div id=\"page-body\">\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact/>\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/articles\" component={ArticlesListPage} />\n          <Route path=\"/article/:name\" component={ArticleSingle} />\n          <Route component={PageNotFound} />\n        </Switch>\n\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}